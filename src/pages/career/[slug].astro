---
import Layout from "@layouts/Layout.astro";
import VacancyLayout from "@layouts/VacancyLayout.astro";
import Breadcrumbs from "@components/Breadcrumbs.astro";
import Vacancies from "@components/blocks/Vacancies.astro";
import Modal from "@components/Modal.astro";
import Form from "@components/forms/FormVacancy.astro";
import Form2 from "@components/forms/FormVacancyOther.astro";

import fetchApi from "@lib/strapi";
import type Vacancy from "@interfaces/vacancy";

import getVacancies from "@data/getVacancies";

import replaceQuotes from "@utils/replaceQuotes";

const pages = await getVacancies();

export async function getStaticPaths() {
  const vacancies = await fetchApi<Vacancy[]>({
    endpoint: "vacancies",
    wrappedByKey: "data",
  });

  return vacancies.map((vacancy) => ({
    params: { slug: vacancy.attributes.slug },
    props: vacancy,
  }));
}

type Props = Vacancy;

const vacancy = Astro.props;

const { slug } = vacancy.attributes;

const title = replaceQuotes(vacancy.attributes.title);

const otherVacancies = pages.filter((page) => page.slug !== slug);

type Crumb = {
  title: string;
  href?: string;
};

const breadcrumbs: Crumb[] = [
  {
    title: "Главная",
    href: "/",
  },
  {
    title: "Карьера",
    href: "/career/",
  },
  {
    title: title,
  },
];
---

<Layout title={title}>
  <section class="section">
    <h2 class="title">{title}</h2>
    <div class="page">
      <Breadcrumbs breadcrumbs={breadcrumbs} />
      <VacancyLayout vacancy={vacancy} />
    </div>

    <Vacancies title="другие вакансии" data={otherVacancies} />
  </section>

  <Modal id={2}>
    <Fragment slot="title">
      Заполните анкету <br /> и мы свяжемся с вами <br /> в течение рабочего дня
    </Fragment>
    <Fragment slot="content"><Form /></Fragment>
  </Modal>

  <Modal id={3}>
    <Fragment slot="title">
      Заполните анкету <br /> и мы свяжемся с вами <br /> в течение рабочего дня
    </Fragment>
    <Fragment slot="content"><Form2 /></Fragment>
  </Modal>
</Layout>
