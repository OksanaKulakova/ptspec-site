---
import Layout from "@layouts/Layout.astro";
import ProjectLayout from "@layouts/ProjectLayout.astro";
import List from "@components/List.astro";
import Breadcrumbs from "@components/Breadcrumbs.astro";

import fetchApi from "@lib/strapi";
import type Project from "@interfaces/project";

import getProjects from "@data/getProjects";

import replaceQuotes from "@utils/replaceQuotes";

export const prerender = false;

const { slug } = Astro.params;

let project: Project;

try {
  project = await fetchApi<Project>({
    endpoint: 'projects',
    wrappedByKey: 'data',
    wrappedByList: true,
    query: {
      'filters[slug][$eq]': slug || '',
      'populate[services][fields][0]': 'title',
      'populate[services][fields][1]': 'slug',
    },
  });

} catch (error) {
  return Astro.redirect('/404');
}

if (!project) return Astro.redirect('/404');

const title = replaceQuotes(project.attributes.title);

const pages = await getProjects();
const otherProjects = pages.filter((page) => page.slug !== slug);

type Crumb = {
  title: string;
  href?: string;
};

const breadcrumbs: Crumb[] = [
  {
    title: "Главная",
    href: "/",
  },
  {
    title: "Проекты",
    href: "/projects/",
  },
  {
    title: title,
  },
];
---

<Layout title={title}>
  <section class="section">
    <h2 class="page-title">{title}</h2>
    <div class="page">
      <Breadcrumbs breadcrumbs={breadcrumbs} />
      <ProjectLayout project={project} />
    </div>
  </section>

  <section class="section">
    <h2 class="title">Другие проекты</h2>
    <List list={otherProjects} />
  </section>
</Layout>
