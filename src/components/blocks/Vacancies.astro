---
interface Props {
  title: string;
}

import List from "@components/List.astro";

import useTranslations from "@i18n/translation";
import { getLangFromUrl } from "@i18n/utils";

import getVacancies from "@data/getVacancies";

export const prerender = false;

const ui = {
  en: {
    "text.p1": "If the vacancy you are interested in is not available, <br> you can fill out a form and get <br> into our specialist database.",
    "text.p2": "We will contact you when <br> suitable vacancies become available.",
    "button.text": "Fill out the form",
  },
  ru: {
    "text.p1": "Если интересующая вакансия отсутствует, <br> вы можете заполнить анкету и попасть <br> в нашу базу специалистов.",
    "text.p2": "Мы свяжемся с вами, когда <br> появятся подходящие вакансии.",
    "button.text": "Заполнить анкету",
  },
} as const;

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang, ui);

const { title } = Astro.props;

const { slug } = Astro.params;

let data = await getVacancies(lang);

if (slug) {
  data = data.filter((page) => page.slug !== slug);
}

---

<section class="vacancies">
  <h2 class="title">{title}</h2>

  <List list={data} />

  <div class="promt">
    <div class="promt-block">
      <div class="promt-text">
        <div class="text">
          <p set:html={t("text.p1")}></p>
          <p set:html={t("text.p2")}></p>
        </div>
        <a class="link show-modal" data-modal-id="3">{t("button.text")}</a>
      </div>
    </div>
  </div>
</section>

<style>
  .vacancies {
    padding: 48px 16px;
  }

  .title {
    margin-bottom: 16px;
  }

  .section:last-child {
    margin-bottom: 0;
  }

  .promt {
    position: relative;
    padding-top: 16px;
  }

  .promt::before {
    content: "";
    position: absolute;
    top: 0;
    width: 100%;
    height: 1px;
    background-color: #161619;
  }

  .promt-text {
    max-width: 452px;
  }

  .promt-text p {
    font-family: "Roboto Mono";
    font-size: 14px;
    line-height: 22px;
    letter-spacing: -0.7px;
    text-transform: none;
  }

  .promt-text .text {
    display: flex;
    flex-direction: column;
    gap: 8px;
  }

  .promt-text .link {
    padding-bottom: 0;
    height: 40px;
  }

  @media screen and (min-width: 1025px) {
    .vacancies {
      padding: 96px 32px;
    }

    .title {
      margin-bottom: 32px;
    }

    .promt {
      display: flex;
      justify-content: flex-end;
    }

    .promt-block {
      width: calc(50% - 8px);
    }

    .promt-text {
      max-width: 452px;
    }

    .promt-text p {
      font-family: "Roboto Mono";
      font-size: 16px;
      line-height: 24px;
      letter-spacing: -0.8px;
    }
  }

  @media screen and (min-width: 1921px) {
    .vacancies {
      padding: 12vh 32px;
    }

    .title {
      margin-bottom: 4vh;
    }

    .promt {
      padding-top: 2vh;
    }

    .promt-block {
      width: calc(50% - 1vh);
    }

    .promt-text {
      max-width: 60%;
    }

    .promt-text .text {
      gap: 1vh;
    }

    .promt-text p {
      font-size: 2vh;
      line-height: 3vh;
      letter-spacing: -0.06vh;
    }

    .promt-text .link {
      height: 5vh;
    }
  }
</style>
