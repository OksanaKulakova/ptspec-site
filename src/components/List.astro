---
interface Props {
  list: Array<List>;
}

interface List {
  title: string;
  href?: string;
}

const { list } = Astro.props;
---

<script>
  class AstroList extends HTMLElement {
    constructor() {
      super();

      let count: number = 10;
      const elements: NodeListOf<Element> = this.querySelectorAll(".list-item");

      const moreButton: Element | null =
        this.querySelector(".list-button-more");

      function hideElements(a: number): void {
        for (let i: number = a; i < elements.length; i++) {
          elements[i].classList.add("list-item--hide");
        }
      }

      function showElements(a: number): void {
        const c = a < elements.length ? a : elements.length;

        for (let i: number = 0; i < c; i++) {
          elements[i].classList.remove("list-item--hide");
        }
      }

      function showButton(): void {
        if (elements.length > 10 && count < elements.length) {
          moreButton.classList.remove("list-button-more--hide");
        } else {
          moreButton.classList.add("list-button-more--hide");
        }
      }

      hideElements(count);
      showButton();

      moreButton.addEventListener("click", () => {
        count += 10;
        showElements(count);
        showButton();
      });
    }
  }

  customElements.define("astro-list", AstroList);
</script>

<astro-list>
  <div class="list">
    {
      list.map((item: List) => (
        <a
          href={item.href}
          class="list-item"
          class:list={[{ "list-item-clickable": item.href }]}
        >
          <div class="list-item-content">
            <div class="list-item-name">{item.title}</div>
          </div>
          {item.href && (
            <div class="list-item-icon">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="32"
                height="32"
                viewBox="0 0 32 32"
                fill="none"
              >
                <path
                  d="M6 6L26 26M26 26L26 6M26 26L6 26"
                  stroke="#161619"
                  stroke-width="2"
                  stroke-linecap="square"
                />
              </svg>
            </div>
          )}
        </a>
      ))
    }
  </div>
  <button class="list-button-more">Показать еще</button>
</astro-list>

<style>
  .list {
    margin: 0;
    padding: 0;
    list-style: none;
    text-decoration: none;
  }

  .list-item {
    position: relative;
    display: flex;
    gap: 16px;
    align-items: flex-start;
    justify-content: space-between;
    padding: 16px 0;
    background-color: #faf8f8;
    color: #161619;
    text-decoration: none;
  }

  .list-item--hide {
    display: none;
  }

  .list-item-content {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    gap: 4px;
    flex: 1 0 0;
  }

  .list-item-name {
    max-width: 488px;
    font-size: 16px;
    line-height: 24px;
    letter-spacing: -0.48px;
    text-transform: uppercase;
  }

  .list-item::before {
    content: "";
    position: absolute;
    top: 0;
    width: 100%;
    height: 1px;
    background-color: #161619;
  }

  .list-item-icon {
    width: 24px;
    height: 24px;
    flex-shrink: 0;
    rotate: -90deg;
  }

  .list-item-icon svg {
    width: 100%;
    height: 100%;
    margin: 0;
    padding: 0;
  }

  .list-item-clickable:hover {
    background-color: #fe5639;
    color: #faf8f8;
  }

  .list-item-clickable:hover::before {
    left: -16px;
    width: calc(100% + 32px);
    height: calc(100% + 1px);
    background-color: #fe5639;
    z-index: -1;
  }

  .list-item-clickable:hover::after {
    content: "";
    position: absolute;
    bottom: -1px;
    width: 100%;
    height: 1px;
    background-color: #fe5639;
    z-index: 2;
  }

  .list-item:hover .list-item-icon svg path {
    stroke: #faf8f8;
  }

  .list-button-more {
    position: relative;
    display: flex;
    padding: 16px 0px;
    justify-content: center;
    align-items: center;
    width: 100%;
    background-color: #faf8f8;
    font-size: 16px;
    line-height: 24px;
    letter-spacing: -0.48px;
    text-transform: uppercase;
    color: #161619;
  }

  .list-button-more::before {
    content: "";
    position: absolute;
    top: 0;
    width: 100%;
    height: 1px;
    background-color: #161619;
  }

  .list-button-more:hover {
    background-color: #fe5639;
    color: #faf8f8;
  }

  .list-button-more:hover::before {
    left: -16px;
    width: calc(100% + 32px);
    height: calc(100% + 1px);
    background-color: #fe5639;
    z-index: -1;
  }

  .list-button-more--hide {
    display: none;
  }

  @media screen and (min-width: 1024px) {
    .list-item-name {
      max-width: 920px;
      font-size: 24px;
      line-height: 32px;
      letter-spacing: -1.44px;
    }

    .list-item-icon {
      width: 32px;
      height: 32px;
      rotate: none;
    }

    .list-item-clickable:hover::before {
      left: -32px;
      width: calc(100% + 64px);
    }

    .list-item:hover .list-item-icon {
      rotate: -90deg;
    }

    .list-button-more {
      font-size: 24px;
      line-height: 32px;
      letter-spacing: -1.44px;
    }

    .list-button-more:hover::before {
      left: -32px;
      width: calc(100% + 64px);
    }
  }
</style>
