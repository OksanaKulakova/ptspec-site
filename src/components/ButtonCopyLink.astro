---
import useTranslations from "@i18n/translation";
import { getLangFromUrl } from "@i18n/utils";

const ui = {
  en: {
    "button.text": "copy link to material",
    "button.text-succes": "link copied",
    "button.text-error": "clipboard not available",
  },
  ru: {
    "button.text": "скопировать ссылку на материал",
    "button.text-succes": "ссылка скопирована",
    "button.text-error": "буфер обмена не доступен",
  },
} as const;

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang, ui);
---

<script>
  class AstroBtnCopyLink extends HTMLElement {
    constructor() {
      super();

      const btn: HTMLElement | null = this.querySelector(".btn");

      const resetTextButton = (): void => {
        btn.innerText = btn.dataset.buttonText;
      };

      btn?.addEventListener("click", (event: Event): void => {
        event.preventDefault();

        const link: string = window.location.href;

        if (navigator.clipboard) {
          navigator.clipboard
            .writeText(link)
            .then(() => {
              btn.innerText = btn.dataset.buttonTextSucces;
            })
            .catch((err: Error) => {
              btn.innerText = err.message;
            });
        } else {
          btn.innerText = btn.dataset.buttonTextError;
        }

        setTimeout(() => {
          resetTextButton();
        }, 5000);
      });
    }
  }

  customElements.define("astro-btn-copy-link", AstroBtnCopyLink);
</script>

<astro-btn-copy-link>
  <button class="btn" data-button-text={t("button.text")} data-button-text-succes={t("button.text-succes")} data-button-text-error={t("button.text-error")}>
    {t("button.text")}
  </button>
</astro-btn-copy-link>
