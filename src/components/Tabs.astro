---
interface Props {
  title: string;
  classList?: string;
  tab1: string;
  tab2: string;
}

const { title, tab1, tab2,  classList='title' } = Astro.props;
---

<script>
  class AstroTab extends HTMLElement {
    constructor() {
      super();

      const tab: NodeListOf<Element> = this.querySelectorAll(".header-tab");
      const tabContent: NodeListOf<Element> =
        this.querySelectorAll(".tabcontent");

      function hideTabContent(a: number): void {
        for (let i: number = a; i < tabContent.length; i++) {
          tabContent[i].classList.remove("show");
          tabContent[i].classList.add("hide");
        }
      }

      function showTabContent(b: number): void {
        if (tabContent[b].classList.contains("hide")) {
          tabContent[b].classList.remove("hide");
          tabContent[b].classList.add("show");
        }
      }

      function toggleTab(b: number): void {
        for (let i: number = 0; i < tab.length; i++) {
          if (i === b) {
            tab[i].classList.add("header-tab--active");
          } else {
            tab[i].classList.remove("header-tab--active");
          }
        }
      }

      toggleTab(0);
      hideTabContent(1);

      this.querySelector(".tab").addEventListener("click", (event: Event) => {
        let target: Element = event.target as Element;

        if (target && target.classList.contains("header-tab")) {
          for (let i: number = 0; i < tab.length; i++) {
            if (target == tab[i]) {
              hideTabContent(0);
              showTabContent(i);
              toggleTab(i);
              break;
            }
          }
        }
      });
    }
  }

  customElements.define("astro-tab", AstroTab);
</script>

<section class="section">
  <h2 set:html={title} class:list={[classList]} />

  <astro-tab>
    <div class="tab">
      <div class="header">
        <div class="header-tab">{tab1}</div>
        <div class="header-tab">{tab2}</div>
      </div>
      <div class="tabcontent">
        <slot name="tabcontent-1" />
      </div>
      <div class="tabcontent">
        <slot name="tabcontent-2" />
      </div>
    </div>
  </astro-tab>
</section>

<style>
  .header {
    position: relative;
  }

  .header::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 1px;
    background-color: #161619;
  }

  .header-tab {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 56px;
    background-color: #faf8f8;
    cursor: pointer;

    font-size: 16px;
    line-height: 24px;
    letter-spacing: -0.48px;
    text-transform: uppercase;
    color: #161619;
  }

  .header-tab--active {
    background-color: #161619;
    color: #faf8f8;
    cursor: default;
  }

  .header-tab:hover {
    color: rgba(22, 22, 25, 0.5);
  }

  .header-tab--active:hover {
    color: #faf8f8;
  }

  .tabcontent.hide {
    display: none;
  }

  .tabcontent.show {
    display: block;
  }

  @media screen and (min-width: 688px) {
    .header {
      display: flex;
      gap: 16px;
    }
  }

  @media screen and (min-width: 1921px) {
    .header {
      gap: 2vh;
    }

    .header-tab {
      height: 7vh;
      font-size: 2vh;
      line-height: 3vh;
      letter-spacing: -0.06vh;
    }
  }
</style>
