---
interface Props {
  title: string;
  cards: Array<Card>;
}

interface Card {
  name: string;
  position: string;
  imagePath: string;
}

const { title, cards } = Astro.props;

import type { ImageMetadata } from "astro";
import { Picture } from "astro:assets";
const images = import.meta.glob<{ default: ImageMetadata }>(
  "/src/assets/team/*.{jpeg,jpg,png,gif}",
);
---

<script>
  import { register } from "swiper/element/bundle";
  register();

  class AstroSwiper extends HTMLElement {
    constructor() {
      super();
    }
  }

  customElements.define("astro-swiper", AstroSwiper);
</script>

<section class="team">
  <h2 set:html={title} class="team-title" />

  <div class="team-cards">
    {
      cards.map((card: Card) => (
        <div class="team-card">
          {card.imagePath && (
            <div class="team-card-cover">
              <Picture
                src={images[card.imagePath]()}
                formats={["jpeg", "webp"]}
                alt={card.name}
              />
            </div>
          )}

          {card.name && <div class="team-card-name">{card.name}</div>}
          {card.position && (
            <div class="team-card-position">{card.position}</div>
          )}
        </div>
      ))
    }
  </div>

  <astro-swiper>
    <swiper-container
      speed="500"
      loop="true"
      space-between="16"
      slides-per-view="1.1"
    >
      {
        cards.map((card: Card) => (
          <swiper-slide>
            <div class="team-card">
              {card.imagePath && (
                <div class="team-card-cover">
                  <Picture
                    src={images[card.imagePath]()}
                    formats={["jpeg", "webp"]}
                    alt={card.name}
                  />
                </div>
              )}

              {card.name && <div class="team-card-name">{card.name}</div>}
              {card.position && (
                <div class="team-card-position">{card.position}</div>
              )}
            </div>
          </swiper-slide>
        ))
      }
    </swiper-container>
  </astro-swiper>
</section>

<style>
  .team {
    display: flex;
    flex-direction: column;
    gap: 16px;
    padding: 48px 0;
  }

  .team-title {
    padding: 0 16px;
    font-size: 40px;
    font-weight: 500;
    line-height: 48px;
    letter-spacing: -2.4px;
    text-transform: uppercase;
  }

  .team-cards {
    display: none;
  }

  .team-card {
    font-size: 16px;
    line-height: 24px;
    letter-spacing: -0.48px;
    text-transform: uppercase;
    width: 100%;
    padding-bottom: 16px;
  }

  .team-card-cover img {
    width: 100%;
    height: 280px;
    margin-bottom: 8px;
    object-fit: cover;
    vertical-align: top;
  }

  .team-card-position {
    color: rgba(22, 22, 25, 0.5);
  }

  astro-swiper {
    display: block;
    margin-left: 16px;
  }

  /* swiper-container {
    width: calc(100% - 32px);
  } */

  /* swiper-slide {
    width: calc(100% - 32px)!important;
  } */

  @media screen and (min-width: 1024px) {
    .team {
      gap: 32px;
      padding: 96px 32px;
    }

    .team-title {
      padding: 0;
      font-size: 96px;
      line-height: 104px;
      letter-spacing: -7.68px;
    }

    .team-cards {
      display: flex;
      gap: 32px 16px;
      flex-flow: row wrap;
      align-items: flex-start;
    }

    .team-card {
      flex: 1 1 calc((100% / 4) - 16px);
      padding-bottom: 0;
    }

    .team-card:first-child {
      flex: 1 1 calc((100% / 2) - 16px);
    }

    .team-card-cover img {
      width: 100%;
      height: 480px;
    }

    astro-swiper {
      display: none;
    }
  }
</style>
